-- 복습이나 실습의 편의상 drop을 쓰지만 실무에서는 쓰지 않거나 매우 조심해서 써야 한다 꼭!!!
drop table mystudent;
drop sequence myseq;
drop table major; 

--복습 편의를 위하여 major 테이블의 create 문을 같이 적는다.
create table major(code int primary key, name varchar2(100));
insert into major(code, name) values(11,'컴공'); -- 테이블명(컬럼명들) 이렇게 적는 경우에는 내가 원하는 컬럼에 대해서만 데이터 넣거나 혹은 원하는 순서대로 데이터 삽입할 수 있다.
insert into major values(22,'화공'); -- 테이블명 values와 같이 컬럼명을 생략하였다면 무조건 순서와 개수 다 맞아야 함


--1. major 테이블에 학과 2개 이상 추가해보기
insert into major values(33,'기계공학');
insert into major(name,code) values ('전자공학',44);

--2. mystudent 테이블에 학생 10명 이상 추가해보기(AI이용해서 코드 만들거나 직접 해보기)

-- 테이블을 삭제하는 방법이 3가지가 있다.
-- drop, delete, truncate ★
-- drop : 완전 삭제, 복구 안 됨, 테이블 자체를 완전히 날려버림
-- delete : 테이블의 껍데기는 남고, 내용만 지움
-- where절을 잘 썼다면 where절에 해당하는 부분만 지우고, where을 깜빡했다면 데이터를 전부 삭제할 수도 있다.
--commit, rollback 
-- truncate : 테이블의 껍데기는 남기고 안의 내용을 지우고, 그 내용 자체는 복구가 안 됨

create sequence myseq; -- nextval을 한 번 호출하면 시작 값은 1이 됨
--nextval : next value
-- currval : current value, nextval을 한 번 이상 호출한 뒤 쓸 수 있음
create table mystudent
(hakbeon int default myseq.nextval  primary key , --별다른 값을 넣지 않으면 1씩 증가한 값이 들어갈거란 얘기
name varchar2(100) not null,
hakgwacode int references major(code));

--select myseq.nextval from dual; --dual : 임시테이블
--select myseq.currval from dual; --dual : 임시테이블


select * from mystudent; -- 전체 조회
-- * : 컬럼 전체를 의미함
select name from mystudent; --특정 컬럼만 출력


insert into mystudent(name,hakgwacode) values('이동준',11);
insert into mystudent(name,hakgwacode) values('한형빈',22);
insert into mystudent(name,hakgwacode) values('박명회',33);
insert into mystudent(name,hakgwacode) values('이유나',44);
insert into mystudent(name,hakgwacode) values('이제영',11);
insert into mystudent(name,hakgwacode) values('추형욱',22);
insert into mystudent(name,hakgwacode) values('조민석',22);
insert into mystudent(name,hakgwacode) values('이지환',22);
insert into mystudent(name,hakgwacode) values('박귀현',11);
insert into mystudent(hakbeon, name,hakgwacode) values(myseq.nextval,'박지선',11);
--insert into mystudent(hakbeon, name,hakgwacode) values(100,'박지선',11);



--3. age 컬럼 추가(int값)


alter table mystudent add age int;
alter table mystudent add gender varchar2(10);

update mystudent set gender='M';
update mystudent set gender='W' where hakbeon < 5;


--4. 성별이 남학생인 사람만 출력해보기

select * from mystudent where gender='M';

--5. 성씨가 이씨인 사람만 삭제해보기(like라는 키워드 필요하고 구글링 해야 함)

delete from mystudent where name like '이%'; -- 이름이 그냥 이 이거나 아니면 이로 시작하는 모든 사람들

--6. 모든 학생들의 나이를 하나씩 증가시키기

update mystudent set age = 20;
update mystudent set age = 18 where hakbeon >5;

update mystudent set age = age+1;


--7. 나이가 20살 이상인 학생들만 2살씩 증가시켜보기


update mystudent set age = age+2 where age>=20;


commit;
select * From mystudent;
