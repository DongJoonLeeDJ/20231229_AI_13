drop table orders;
drop sequence myorder;
drop table book;
drop table customer;


create table book
(
bookid int primary key,
bookname varchar2(40) not null,
publisher varchar2(40) not null,
price int
);
create table customer
(
custid int primary key,
name varchar2(40) not null,
address varchar2(50),
phone varchar2(20) unique
);

create sequence myorder;
create table orders(
orderid int default myorder.nextval primary key,
custid int references customer(custid),
bookid int references book(bookid),
saleprice int,
orderdate date default sysdate -- 자동으로 현재 시점 집어넣어 줌
);

insert into book values(1,'축구의 역사', '굿스포츠', 7000);
insert into book values(2,'축구아는 여자', '나무수', 13000);
insert into book values(3,'축구의 이해', '대한미디어', 22000);
insert into book values(4,'골프 바이블', '대한미디어', 35000);
insert into book values(5,'피겨 교본', '굿스포츠', 8000);
insert into book values(6,'역도 단계별 기술', '굿스포츠', 6000);
insert into book values(7,'야구의 추억', '이상미디어', 20000);
insert into book values(8,'야구를 부탁해', '이상미디어', 13000);
insert into book values(9,'올림픽 이야기', '삼성당', 7500);
insert into book values(10,'Olympic Champions', 'Pearson', 13000);

insert into customer values(1,'박지성','대한민국 서울', '000-5000-0001');
insert into customer values(2,'김연아','대한민국 경기도', '000-5000-0002');
insert into customer values(3,'장미란','대한민국 강원도', '000-5000-0003');
insert into customer values(4,'추신수','대한민국 인천', '000-5000-0004');
insert into customer values(5,'박세리','대한민국 대전', '000-5000-0005');

insert into orders (custid,bookid) values (1,1);
insert into orders (custid,bookid) values (1,3);
insert into orders (custid,bookid) values (2,5);
insert into orders (custid,bookid) values (3,6);
insert into orders (custid,bookid) values (4,7);
insert into orders (custid,bookid) values (1,2);
insert into orders (custid,bookid) values (4,8);
insert into orders (custid,bookid) values (3,10);
insert into orders (custid,bookid) values (2,10);
insert into orders (custid,bookid) values (3,8);


select * from orders;


-- join
select orderid, name, bookname from orders join book on orders.bookid=book.bookid join customer on orders.custid=customer.custid;

-- group by, having
-- group by : 그룹을 지어 묶는 것
-- 출판사별 평균 가격
select publisher, avg(price) from book group by publisher;

-- 중첩 질의
--select문 안에 select문이 또 있음
--가장 비싼 책을 보여준다고 칩시다.
select * From book where price=35000;
select * from book where price = (select max(price) from book);

--출판사 별로 가장 비싼 책
select publisher, max(price) from book group by publisher;

--having : group by 결과물에 대하여 where절 추가
--group by용 where
--출판사별 가장 비싼 책을 출력하되, 가장 비싼 책의 가격이 만원이 넘는 것만 출력
select publisher, max(price) from book group by publisher having max(price) >10000;











